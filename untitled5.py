# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iiDR7x209gsrLdLGoLrrONmMT1TDD6kP
"""

from google.colab import files
uploaded = files.upload()
import pandas as pd

# Load the uploaded file
df = pd.read_csv("Team_Performance_Metrics_10rows.csv")

# Check for missing values
df.isnull().sum()

# Check for duplicate rows
duplicate_rows = df.duplicated()
print("Duplicate Rows:", duplicate_rows.sum())

# Example: Distance Covered
min_distance = df['Distance_Covered_km'].min()
max_distance = df['Distance_Covered_km'].max()

print("Min Distance Covered:", min_distance)
print("Max Distance Covered:", max_distance)

# Drop the Heart Rate column, if it exists
if 'Heart_Rate_avg' in df.columns:
  df = df.drop(columns=['Heart_Rate_avg'])
  print("Heart_Rate_avg column dropped.")
else:
  print("Heart_Rate_avg column not found in DataFrame.")

# Count of players by position
df['Position'].value_counts()

# Correlation matrix
df.corr(numeric_only=True)

# Grouping goals by match result
df.groupby('Result')['Goals'].sum()

import seaborn as sns
import matplotlib.pyplot as plt

# Plot Sprint Count by Position
sns.barplot(x='Position', y='Sprint_Count', data=df)
plt.title('Sprint Count by Position')
plt.xticks(rotation=45)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
import random

# Step 1: Generate sample dataset
teams = ['Team A', 'Team B', 'Team C', 'Team D']
positions = ['Forward', 'Midfielder', 'Defender', 'Goalkeeper']
results = ['Win', 'Loss', 'Draw']

data = []
for i in range(10):
    game_id = f"{random.randint(1, 10):03}"
    player_id = f"P{random.randint(100, 999)}"
    team = random.choice(teams)
    opponent = random.choice([t for t in teams if t != team])
    position = random.choice(positions)
    minutes = random.randint(60, 95)
    distance = round(random.uniform(6, 12), 1)
    pass_acc = round(random.uniform(60, 95), 1)
    shots = random.randint(0, 5)
    tackles = random.randint(0, 6)
    turnovers = random.randint(0, 5)
    assists = random.randint(0, 3)
    goals = random.randint(0, 2)
    sprints = random.randint(10, 35)
    heart_rate = random.randint(120, 160)
    result = random.choice(results)

    data.append([
        game_id, player_id, team, opponent, position, minutes, distance,
        pass_acc, shots, tackles, turnovers, assists, goals, sprints,
        heart_rate, result
    ])

columns = [
    'Game_ID', 'Player_ID', 'Team', 'Opponent', 'Position', 'Minutes_Played',
    'Distance_Covered_km', 'Pass_Accuracy (%)', 'Shots_On_Target', 'Tackles',
    'Turnovers', 'Assists', 'Goals', 'Sprint_Count', 'Heart_Rate_avg', 'Result'
]

df = pd.DataFrame(data, columns=columns)

# Step 2: Save to CSV
df.to_csv("Team_Performance_Metrics_10rows.csv", index=False)

# Step 3: Plot a line graph
plt.figure(figsize=(10, 6))
plt.plot(df['Player_ID'], df['Distance_Covered_km'], marker='o', label='Distance Covered (km)', color='blue')
plt.plot(df['Player_ID'], df['Sprint_Count'], marker='s', label='Sprint Count', color='green')
plt.title('Player Sprint Count vs. Distance Covered')
plt.xlabel('Player ID')
plt.ylabel('Values')
plt.xticks(rotation=45)
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()